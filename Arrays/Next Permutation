class Solution {
    public void nextPermutation(int[] nums) { 
        int l=nums.length; 
        //System.out.println(l);  
        int index1=0;
         int index2=0; 
        int flag=0; 
        
      //step1 --->traverse from the end to find the point such that arr[i] <arr[i+1]
        for(int i=l-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                index1=i;  
                flag=1;
                break;
            }
        }   
        //if no such point just reverse the array
        if(flag==0){
            int q=0;
            int w=l-1; 
            while(q<=w){
                swap(nums,q,w); 
                q++;
                w--;
            }
        } 
      else{
        System.out.println(index1); 
        //find the next greater permutation index
        for(int i=l-1;i>=0;i--){
            if(nums[i]>nums[index1]){
                 index2=i; 
                 break;
            }
        } 
        System.out.println(index2);
        //swap those index index1 and index2 
       swap(nums,index1,index2); 
       // reverse the array from index1+1 to end 
         int a=index1+1;
        int b=l-1;  
        while(a<=b){
            swap(nums,a,b); 
            a++;
            b--;
        }
      } 
    } 
    public void swap(int [] nums,int index1,int index2){
        int temp; 
        temp=nums[index1];
        nums[index1]=nums[index2];
        nums[index2]=temp;
    }
} 
